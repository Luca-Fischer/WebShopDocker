{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/categories/categories.component.ts","./src/app/components/categories/categories.component.html","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-details/product-details.component.html","./src/app/components/products/products.component.ts","./src/app/components/products/products.component.html","./src/app/components/shopping-carts/shopping-carts.component.ts","./src/app/components/shopping-carts/shopping-carts.component.html","./src/app/constants.ts","./src/app/models/Brand.ts","./src/app/models/Category.ts","./src/app/models/Product.ts","./src/app/models/Size.ts","./src/app/models/Stock.ts","./src/app/services/brand/brands.service.ts","./src/app/services/categories/categories.service.ts","./src/app/services/products/products.service.ts","./src/app/services/shopping_cart/shopping-cart.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProductsComponent} from \"./components/products/products.component\";\nimport {CategoriesComponent} from \"./components/categories/categories.component\";\nimport {ShoppingCartsComponent} from \"./components/shopping-carts/shopping-carts.component\";\nimport {ProductDetailsComponent} from \"./components/product-details/product-details.component\";\n\n\nconst routes: Routes = [\n  {path: 'products', component: ProductsComponent},\n  {path: 'product-details/:id', component: ProductDetailsComponent},\n  {path: 'categories', component: CategoriesComponent},\n  {path: 'shopping-carts', component: ShoppingCartsComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'WebShop';\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon>menu</mat-icon>\n    </button>\n    <a mat-button [routerLink]=\"'./'\">{{ title }}</a>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <a mat-button [routerLink]=\"'/products'\">Products</a>\n      <a mat-button [routerLink]=\"'/categories'\">Categories</a>\n      <a mat-button [routerLink]=\"'/shopping-carts'\"><mat-icon mat-list-icon>shopping_cart</mat-icon></a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatCardModule} from '@angular/material/card';\nimport { ProductsComponent } from './components/products/products.component';\nimport { CategoriesComponent } from './components/categories/categories.component';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport { ShoppingCartsComponent } from './components/shopping-carts/shopping-carts.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    CategoriesComponent,\n    ShoppingCartsComponent,\n    ProductDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    MatTableModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CategoriesService} from \"../../services/categories/categories.service\";\nimport {Category} from \"../../models/Category\";\nimport {mapCategory} from \"../../constants\";\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: Array<Category> = [];\n  category: Category = null;\n\n  constructor(private categoriesService: CategoriesService) {\n  }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategories().subscribe(res => {\n      for (let i in res) {\n        this.categories.push(mapCategory(res[i]));\n      }\n    });\n  }\n\n  selectCategory(category: Category) {\n    this.category = category;\n  }\n}\n","<mat-list>\n  <div mat-subheader>Categorien</div>\n  <mat-list-item *ngFor=\"let category of categories\">\n    <mat-icon mat-list-icon>shopping_cart</mat-icon>\n      <div mat-line (click)=\"selectCategory(category)\">{{category.name}}</div>\n  </mat-list-item>\n</mat-list>\n\n<div *ngIf=\"category\">\n  Ausgewählte Kategorie: {{category.name}} (#{{category.id}})\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {mapProduct, mapStock} from \"../../constants\";\nimport {ProductsService} from \"../../services/products/products.service\";\nimport {Product} from \"../../models/Product\";\nimport {Stock} from \"../../models/Stock\";\nimport {Size} from \"../../models/Size\";\nimport {ShoppingCartService} from \"../../services/shopping_cart/shopping-cart.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  public id: string;\n  public product: Product = null;\n  public stock: Array<Stock> = [];\n  public size: Size = null;\n  public amount: number = 1;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private productsService: ProductsService,\n              private snackBar: MatSnackBar,\n              private shoppingCartService: ShoppingCartService) {\n  }\n\n  ngOnInit(): void {\n    // id aus der URL als Parameter holen\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    // Produkt Details abfragen\n    this.productsService.getProduct(this.id).subscribe(res => {\n      this.product = mapProduct(res);\n      // Stock des Produktes abfragen\n      this.productsService.getStock(this.id).subscribe(res_stock => {\n        this.stock = [];\n        for (let i in res_stock) {\n          this.stock.push(mapStock(res_stock[i]));\n        }\n      });\n    });\n  }\n\n  setSize(size: Size) {\n    this.size = size;\n  }\n\n  addToCart() {\n    if (this.size == null) {\n      this.snackBar.open('Please select a size', 'OK');\n    } else {\n      for (let _stock of this.stock) {\n        if (_stock.size.id == this.size.id) {\n          if (this.amount > _stock.amount) {\n            this.snackBar.open('You can not add the selected amount to the shopping cart', 'OK');\n          } else {\n            this.shoppingCartService.addItem(this.product, this.size, this.amount);\n            this.snackBar.open('Successfully added product to shopping cart');\n          }\n        }\n      }\n    }\n  }\n}\n","<div id=\"parent\" *ngIf=\"product\">\n  <div id=\"\">\n    <img mat-card-image class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n  </div>\n  <div class=\"space\">\n    <h1>{{product.name}}</h1>\n    <h3>{{product.price}}$</h3>\n    <mat-form-field>\n      <mat-label>Size</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let _stock of stock\" [value]=\"_stock.size.name\" (onSelectionChange)=\"setSize(_stock.size)\">\n          {{_stock.size.name}} ({{_stock.amount}})\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <br>\n\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>Amount</mat-label>\n      <input matInput type=\"number\" [(ngModel)]=\"amount\">\n    </mat-form-field>\n\n\n    <br>\n    <div>\n      <button mat-stroked-button color=\"primary\" (click)=\"addToCart()\">\n        In den Warenkorb\n        <mat-icon mat-list-icon>shopping_cart</mat-icon>\n      </button>\n    </div>\n    <hr>\n    <div>\n      <p>\n        Standard-Lieferung Kostenlos\n      </p>\n      <p>\n        2-4 Werktage\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from \"../../services/products/products.service\";\nimport {Product} from \"../../models/Product\";\nimport {mapProduct} from \"../../constants\";\nimport {CategoriesService} from \"../../services/categories/categories.service\";\nimport {Category} from \"../../models/Category\";\nimport {mapCategory} from \"../../constants\";\nimport {BrandsService} from \"../../services/brand/brands.service\";\nimport {Brand} from \"../../models/Brand\";\nimport {mapBrand} from \"../../constants\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  products: Array<Product> = [];\n  product: Product = null;\n\n  categories: Array<Category> = [];\n  category: Category = null;\n\n  brands: Array<Brand> = [];\n  brand: Brand = null;\n\n  constructor(private productsService: ProductsService, private categoriesService: CategoriesService, private brandsService: BrandsService) { }\n\n  ngOnInit(): void {\n    this.productsService.getProducts().subscribe(res => {\n      for (let i in res) {\n        this.products.push(mapProduct(res[i]));\n      }\n    });\n    this.categoriesService.getCategories().subscribe(res => {\n      for (let i in res) {\n        this.categories.push(mapCategory(res[i]));\n      }\n    });\n    this.brandsService.getBrands().subscribe(res => {\n      for (let i in res) {\n        this.brands.push(mapBrand(res[i]));\n      }\n    });\n  }\n\n  selectCategory(category: Category) {\n    this.category = category;\n    this.categoriesService.getProducts(this.category.id).subscribe(res => {\n      this.products = [];\n      for (let k in res) {\n        this.products.push(mapProduct(res[k]));\n      }\n    });\n  }\n  selectBrand(brand: Brand) {\n    this.brand = brand;\n    this.brandsService.getProducts(this.brand.id).subscribe(res => {\n      this.products = [];\n      for (let k in res) {\n        this.products.push(mapProduct(res[k]));\n      }\n    });\n  }\n}\n","<mat-form-field class=\"ml\">\n  <mat-label>Filter</mat-label>\n  <mat-select>\n    <mat-option>\n      <mat-label>Marke&nbsp;&nbsp;</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let brand of brands\" [value]=\"brand.name\">\n          <div mat-line (click)=\"selectBrand(brand)\">{{brand.name}}</div>\n        </mat-option>\n      </mat-select>\n    </mat-option>\n    <mat-option>\n      <mat-label>Kategorie&nbsp;&nbsp;</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let category of categories\" [value]=\"category.name\">\n          <div mat-line (click)=\"selectCategory(category)\">{{category.name}}</div>\n        </mat-option>\n      </mat-select>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n<br>\n<mat-grid-list cols=\"4\">\n  <mat-grid-tile *ngFor=\"let product of products\">\n    <a [routerLink]=\"['/product-details', product.id]\">\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title>{{product.name}}</mat-card-title>\n        <mat-card-subtitle>{{product.category.name}}</mat-card-subtitle>\n      </mat-card-header>\n      <img mat-card-image class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n      <mat-card-actions>\n        <div class=\"ml\">{{product.price}}$</div>\n        <button mat-button>Teilen</button>\n        <button mat-button>Kaufen</button>\n      </mat-card-actions>\n    </mat-card>\n    </a>\n  </mat-grid-tile>\n</mat-grid-list>\n\n<mat-list>\n  <div mat-subheader>Produkte</div>\n  <mat-list-item *ngFor=\"let product of products; let i = index\">\n    <img class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n    <div mat-line>\n        {{product.name}}\n    </div>\n    <div mat-line>\n      {{product.category.name}}\n    </div>\n    <div mat-line>\n      {{product.price}}€\n    </div>\n  </mat-list-item>\n</mat-list>\n","import {Component, OnInit} from '@angular/core';\nimport {ShoppingCartService} from \"../../services/shopping_cart/shopping-cart.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {mapProduct, mapSize} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\nimport {Size} from \"../../models/Size\";\n\n@Component({\n  selector: 'app-shopping-carts',\n  templateUrl: './shopping-carts.component.html',\n  styleUrls: ['./shopping-carts.component.scss']\n})\nexport class ShoppingCartsComponent implements OnInit {\n\n  cart: Array<any> = [];\n  total: number = 0;\n\n  constructor(private shoppingCartService: ShoppingCartService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n    this.cart = this.shoppingCartService.getItems();\n    this.calcTotalPrice();\n  }\n\n  calcTotalPrice() {\n    this.total = 0;\n    for (let item of this.cart) {\n      this.total += item.amount * item.product._price;\n    }\n  }\n\n  orderNow() {\n\n  }\n\n  removeElement(index: number) {\n    this.shoppingCartService.removeItem(index);\n    this.snackBar.open(\"Erfolgreich gelöscht\")\n    this.cart = this.shoppingCartService.getItems();\n\n    this.calcTotalPrice();\n  }\n}\n","<mat-list>\n  <div mat-subheader>Shopping Cart</div>\n  <mat-list-item *ngFor=\"let item of cart; let i = index\">\n    <mat-icon mat-list-icon>shopping_cart</mat-icon>\n    <div mat-line>\n      <p style=\"float: left\">\n        {{item.product._name}}\n        <br>\n        Size: {{item.size._name}} | Amount: {{item.amount}} x {{item.product._price}}€\n      </p>\n      <p style=\"float: right\">\n        <button mat-icon-button aria-label=\"remove item\" (click)=\"removeElement(i)\" title=\"Remove Item\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </p>\n    </div>\n  </mat-list-item>\n</mat-list>\n\nTotal: {{total}}€\n\n<button mat-button aria-label=\"order\" (click)=\"orderNow()\" title=\"Order\">\n  Bestellen\n  <mat-icon>shopping_cart</mat-icon>\n</button>\n","import {Category} from \"./models/Category\";\nimport {Product} from \"./models/Product\";\nimport {Size} from \"./models/Size\";\nimport {Stock} from \"./models/Stock\";\nimport {Brand} from \"./models/Brand\";\nimport {throwError} from \"rxjs\";\n\nexport function mapProduct(product: any): Product {\n  const category = mapCategory(product.category);\n  const brand = mapBrand(product.brand);\n  return new Product(product._id, product.name, product.price, product.logo, category, brand);\n}\n\nexport function mapCategory(category: any): Category {\n  return new Category(category._id, category.name);\n}\n\nexport function mapBrand(brand: any): Brand {\n  return new Brand(brand._id, brand.name);\n}\n\nexport function mapSize(size: any): Size {\n  return new Size(size._id, size.name);\n}\n\nexport function mapStock(stock: any): Stock {\n  let product = mapProduct(stock.product);\n  let size = mapSize(stock.size);\n  return new Stock(stock._id, product, size, stock.amount);\n}\n\n\n/**\n * Handle Errors for HttpClient\n */\nexport function errorHandler(err: Response | any) {\n  let errorMessage = '';\n  if (err.error instanceof ErrorEvent) {\n    // Get client-side error\n    errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n  }\n  //console.log(errorMessage);\n  return throwError(errorMessage);\n}\n","export class Brand {\n  constructor(private _id: string,\n              private _name: string) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","export class Category {\nconstructor(private _id: string,\n            private _name: string) {\n}\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","import {Category} from \"./Category\";\nimport {Brand} from \"./Brand\";\n\nexport class Product {\n  constructor(private _id: string,\n              private _name: string,\n              private _price: number,\n              private _logo: string,\n              private _category: Category,\n              private _brand: Brand) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  get price(): number {\n    return this._price;\n  }\n\n  set price(value: number) {\n    this._price = value;\n  }\n\n  get brand(): Brand {\n    return this._brand;\n  }\n\n  set brand(value: Brand) {\n    this._brand = value;\n  }\n\n  get logo(): string {\n    return this._logo;\n  }\n\n  set logo(value: string) {\n    this._logo = value;\n  }\n\n  get category(): Category {\n    return this._category;\n  }\n\n  set category(value: Category) {\n    this._category = value;\n  }\n}\n","export class Size {\n  constructor(private _id: string,\n              private _name: string) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","import {Product} from \"./Product\";\nimport {Size} from \"./Size\";\n\nexport class Stock {\n  constructor(private _id: string,\n              private _product: Product,\n              private _size: Size,\n              private _amount: number) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get product(): Product {\n    return this._product;\n  }\n\n  set product(value: Product) {\n    this._product = value;\n  }\n\n  get size(): Size {\n    return this._size;\n  }\n\n  set size(value: Size) {\n    this._size = value;\n  }\n\n  get amount(): number {\n    return this._amount;\n  }\n\n  set amount(value: number) {\n    this._amount = value;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Brand} from \"../../models/Brand\";\nimport {environment} from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {errorHandler} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getBrands(): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"brands\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getBrand(id: string): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"brands/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createBrand(body: any): Observable<Brand> {\n    return this.http.post<Brand>(environment.api_url + \"brands\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateBrand(id: string, body: any): Observable<Brand> {\n    return this.http.post<Brand>(environment.api_url + \"brands/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteBrand(id: string): Observable<Brand> {\n    return this.http.delete<Brand>(environment.api_url + \"brands/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProducts(brand_id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"brands/\" + brand_id + \"/products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Category} from \"../../models/Category\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {environment} from \"../../../environments/environment\";\nimport {errorHandler} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\nimport {Brand} from \"../../models/Brand\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCategories(): Observable<Category> {\n    return this.http.get<Category>(environment.api_url + \"categories\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getCategory(id: string): Observable<Category> {\n    return this.http.get<Category>(environment.api_url + \"categories/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createCategory(body: any): Observable<Category> {\n    return this.http.post<Category>(environment.api_url + \"categories\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateCategory(id: string, body: any):Observable<Category> {\n    return this.http.post<Category>(environment.api_url + \"categories/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    return this.http.delete<Category>(environment.api_url + \"categories/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProducts(category_id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"categories/\" + category_id + \"/products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n /* getBrands(brand_id: string): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"categories/\" + brand_id + \"/brands\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }*/\n}\n","import { Injectable } from '@angular/core';\nimport {Product} from \"../../models/Product\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {environment} from \"../../../environments/environment\";\nimport {errorHandler} from \"../../constants\";\nimport {Stock} from \"../../models/Stock\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getProducts(): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProduct(id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"products/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createProduct(body: any): Observable<Product> {\n    return this.http.post<Product>(environment.api_url + \"products\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateProduct(id: string, body: any):Observable<Product> {\n    return this.http.post<Product>(environment.api_url + \"products/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteProduct(id: string): Observable<Product> {\n    return this.http.delete<Product>(environment.api_url + \"products/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getStock(id: string): Observable<Stock> {\n    return this.http.get<Stock>(environment.api_url + \"products/\" + id + \"/stock\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor() {\n  }\n\n  /**\n   * Add selection to the user's shopping cart\n   * @param product to be added to the local storage\n   * @param size of the product\n   * @param amount of items\n   */\n  addItem(product: any, size: any, amount: number) {\n    let cart = this.getItems();\n    // check if cart has not initialized before\n    if (cart == null) {\n      cart = [];\n    }\n    // push selection to array\n    cart.push({\n      product: product,\n      size: size,\n      amount: amount\n    });\n    // save it\n    this.writeItems(cart);\n  }\n\n  /**\n   * Save shopping cart in local storage\n   * @param cart\n   */\n  writeItems(cart: any) {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n\n  getItems(): Array<any> {\n    let cart_string = localStorage.getItem('cart');\n    let cart_json = JSON.parse(cart_string);\n\n    return cart_json;\n  }\n\n  /**\n   * Remove product with size from shopping cart\n   * @param index\n   */\n  removeItem(index: number) {\n    let cart = this.getItems();\n    // remove index\n    delete cart[index];\n    // remove null value\n    let filtered = cart.filter(function (el) {\n      return el != null;\n    });\n\n    this.writeItems(filtered);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: \"http://localhost:3000/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}