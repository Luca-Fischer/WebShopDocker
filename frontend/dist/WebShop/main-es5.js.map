{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/categories/categories.component.ts","webpack:///src/app/components/categories/categories.component.html","webpack:///src/app/components/product-details/product-details.component.ts","webpack:///src/app/components/product-details/product-details.component.html","webpack:///src/app/components/products/products.component.ts","webpack:///src/app/components/products/products.component.html","webpack:///src/app/components/shopping-carts/shopping-carts.component.ts","webpack:///src/app/components/shopping-carts/shopping-carts.component.html","webpack:///src/app/constants.ts","webpack:///src/app/models/Brand.ts","webpack:///src/app/models/Category.ts","webpack:///src/app/models/Product.ts","webpack:///src/app/models/Size.ts","webpack:///src/app/models/Stock.ts","webpack:///src/app/services/brand/brands.service.ts","webpack:///src/app/services/categories/categories.service.ts","webpack:///src/app/services/products/products.service.ts","webpack:///src/app/services/shopping_cart/shopping-cart.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CategoriesComponent","categoriesService","categories","category","getCategories","subscribe","res","i","push","ProductDetailsComponent","activatedRoute","productsService","snackBar","shoppingCartService","product","stock","size","amount","snapshot","paramMap","get","getProduct","getStock","res_stock","open","_stock","addItem","ProductsComponent","brandsService","products","brands","brand","getProducts","getBrands","k","ShoppingCartsComponent","cart","total","getItems","calcTotalPrice","item","_price","index","removeItem","orderNow","mapProduct","mapCategory","mapBrand","_id","name","price","logo","mapSize","mapStock","errorHandler","err","errorMessage","error","ErrorEvent","status","message","Brand","_name","value","Category","Product","_logo","_category","_brand","Size","Stock","_product","_size","_amount","BrandsService","http","api_url","pipe","body","post","brand_id","providedIn","CategoriesService","category_id","ProductsService","ShoppingCartService","writeItems","localStorage","setItem","JSON","stringify","cart_string","getItem","cart_json","parse","filtered","filter","el","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ProductsComponent} from \"./components/products/products.component\";\nimport {CategoriesComponent} from \"./components/categories/categories.component\";\nimport {ShoppingCartsComponent} from \"./components/shopping-carts/shopping-carts.component\";\nimport {ProductDetailsComponent} from \"./components/product-details/product-details.component\";\n\n\nconst routes: Routes = [\n  {path: 'products', component: ProductsComponent},\n  {path: 'product-details/:id', component: ProductDetailsComponent},\n  {path: 'categories', component: CategoriesComponent},\n  {path: 'shopping-carts', component: ShoppingCartsComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'WebShop';\n}\n","<mat-toolbar>\n  <mat-toolbar-row>\n    <button mat-icon-button>\n      <mat-icon>menu</mat-icon>\n    </button>\n    <a mat-button [routerLink]=\"'./'\">{{ title }}</a>\n    <span class=\"toolbar-spacer\"></span>\n    <div>\n      <a mat-button [routerLink]=\"'/products'\">Products</a>\n      <a mat-button [routerLink]=\"'/categories'\">Categories</a>\n      <a mat-button [routerLink]=\"'/shopping-carts'\"><mat-icon mat-list-icon>shopping_cart</mat-icon></a>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatCardModule} from '@angular/material/card';\nimport { ProductsComponent } from './components/products/products.component';\nimport { CategoriesComponent } from './components/categories/categories.component';\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {MatGridListModule} from \"@angular/material/grid-list\";\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {MatChipsModule} from \"@angular/material/chips\";\nimport { ShoppingCartsComponent } from './components/shopping-carts/shopping-carts.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport {MatButtonToggleModule} from \"@angular/material/button-toggle\";\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule} from \"@angular/forms\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductsComponent,\n    CategoriesComponent,\n    ShoppingCartsComponent,\n    ProductDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatSliderModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatButtonToggleModule,\n    MatTableModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CategoriesService} from \"../../services/categories/categories.service\";\nimport {Category} from \"../../models/Category\";\nimport {mapCategory} from \"../../constants\";\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: Array<Category> = [];\n  category: Category = null;\n\n  constructor(private categoriesService: CategoriesService) {\n  }\n\n  ngOnInit(): void {\n    this.categoriesService.getCategories().subscribe(res => {\n      for (let i in res) {\n        this.categories.push(mapCategory(res[i]));\n      }\n    });\n  }\n\n  selectCategory(category: Category) {\n    this.category = category;\n  }\n}\n","<mat-list>\n  <div mat-subheader>Categorien</div>\n  <mat-list-item *ngFor=\"let category of categories\">\n    <mat-icon mat-list-icon>shopping_cart</mat-icon>\n      <div mat-line (click)=\"selectCategory(category)\">{{category.name}}</div>\n  </mat-list-item>\n</mat-list>\n\n<div *ngIf=\"category\">\n  Ausgewählte Kategorie: {{category.name}} (#{{category.id}})\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {mapProduct, mapStock} from \"../../constants\";\nimport {ProductsService} from \"../../services/products/products.service\";\nimport {Product} from \"../../models/Product\";\nimport {Stock} from \"../../models/Stock\";\nimport {Size} from \"../../models/Size\";\nimport {ShoppingCartService} from \"../../services/shopping_cart/shopping-cart.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  public id: string;\n  public product: Product = null;\n  public stock: Array<Stock> = [];\n  public size: Size = null;\n  public amount: number = 1;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private productsService: ProductsService,\n              private snackBar: MatSnackBar,\n              private shoppingCartService: ShoppingCartService) {\n  }\n\n  ngOnInit(): void {\n    // id aus der URL als Parameter holen\n    this.id = this.activatedRoute.snapshot.paramMap.get('id');\n\n    // Produkt Details abfragen\n    this.productsService.getProduct(this.id).subscribe(res => {\n      this.product = mapProduct(res);\n      // Stock des Produktes abfragen\n      this.productsService.getStock(this.id).subscribe(res_stock => {\n        this.stock = [];\n        for (let i in res_stock) {\n          this.stock.push(mapStock(res_stock[i]));\n        }\n      });\n    });\n  }\n\n  setSize(size: Size) {\n    this.size = size;\n  }\n\n  addToCart() {\n    if (this.size == null) {\n      this.snackBar.open('Please select a size', 'OK');\n    } else {\n      for (let _stock of this.stock) {\n        if (_stock.size.id == this.size.id) {\n          if (this.amount > _stock.amount) {\n            this.snackBar.open('You can not add the selected amount to the shopping cart', 'OK');\n          } else {\n            this.shoppingCartService.addItem(this.product, this.size, this.amount);\n            this.snackBar.open('Successfully added product to shopping cart');\n          }\n        }\n      }\n    }\n  }\n}\n","<div id=\"parent\" *ngIf=\"product\">\n  <div id=\"\">\n    <img mat-card-image class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n  </div>\n  <div class=\"space\">\n    <h1>{{product.name}}</h1>\n    <h3>{{product.price}}$</h3>\n    <mat-form-field>\n      <mat-label>Size</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let _stock of stock\" [value]=\"_stock.size.name\" (onSelectionChange)=\"setSize(_stock.size)\">\n          {{_stock.size.name}} ({{_stock.amount}})\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <br>\n\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>Amount</mat-label>\n      <input matInput type=\"number\" [(ngModel)]=\"amount\">\n    </mat-form-field>\n\n\n    <br>\n    <div>\n      <button mat-stroked-button color=\"primary\" (click)=\"addToCart()\">\n        In den Warenkorb\n        <mat-icon mat-list-icon>shopping_cart</mat-icon>\n      </button>\n    </div>\n    <hr>\n    <div>\n      <p>\n        Standard-Lieferung Kostenlos\n      </p>\n      <p>\n        2-4 Werktage\n      </p>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ProductsService} from \"../../services/products/products.service\";\nimport {Product} from \"../../models/Product\";\nimport {mapProduct} from \"../../constants\";\nimport {CategoriesService} from \"../../services/categories/categories.service\";\nimport {Category} from \"../../models/Category\";\nimport {mapCategory} from \"../../constants\";\nimport {BrandsService} from \"../../services/brand/brands.service\";\nimport {Brand} from \"../../models/Brand\";\nimport {mapBrand} from \"../../constants\";\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.scss']\n})\nexport class ProductsComponent implements OnInit {\n  products: Array<Product> = [];\n  product: Product = null;\n\n  categories: Array<Category> = [];\n  category: Category = null;\n\n  brands: Array<Brand> = [];\n  brand: Brand = null;\n\n  constructor(private productsService: ProductsService, private categoriesService: CategoriesService, private brandsService: BrandsService) { }\n\n  ngOnInit(): void {\n    this.productsService.getProducts().subscribe(res => {\n      for (let i in res) {\n        this.products.push(mapProduct(res[i]));\n      }\n    });\n    this.categoriesService.getCategories().subscribe(res => {\n      for (let i in res) {\n        this.categories.push(mapCategory(res[i]));\n      }\n    });\n    this.brandsService.getBrands().subscribe(res => {\n      for (let i in res) {\n        this.brands.push(mapBrand(res[i]));\n      }\n    });\n  }\n\n  selectCategory(category: Category) {\n    this.category = category;\n    this.categoriesService.getProducts(this.category.id).subscribe(res => {\n      this.products = [];\n      for (let k in res) {\n        this.products.push(mapProduct(res[k]));\n      }\n    });\n  }\n  selectBrand(brand: Brand) {\n    this.brand = brand;\n    this.brandsService.getProducts(this.brand.id).subscribe(res => {\n      this.products = [];\n      for (let k in res) {\n        this.products.push(mapProduct(res[k]));\n      }\n    });\n  }\n}\n","<mat-form-field class=\"ml\">\n  <mat-label>Filter</mat-label>\n  <mat-select>\n    <mat-option>\n      <mat-label>Marke&nbsp;&nbsp;</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let brand of brands\" [value]=\"brand.name\">\n          <div mat-line (click)=\"selectBrand(brand)\">{{brand.name}}</div>\n        </mat-option>\n      </mat-select>\n    </mat-option>\n    <mat-option>\n      <mat-label>Kategorie&nbsp;&nbsp;</mat-label>\n      <mat-select>\n        <mat-option *ngFor=\"let category of categories\" [value]=\"category.name\">\n          <div mat-line (click)=\"selectCategory(category)\">{{category.name}}</div>\n        </mat-option>\n      </mat-select>\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n<br>\n<mat-grid-list cols=\"4\">\n  <mat-grid-tile *ngFor=\"let product of products\">\n    <a [routerLink]=\"['/product-details', product.id]\">\n    <mat-card class=\"example-card\">\n      <mat-card-header>\n        <mat-card-title>{{product.name}}</mat-card-title>\n        <mat-card-subtitle>{{product.category.name}}</mat-card-subtitle>\n      </mat-card-header>\n      <img mat-card-image class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n      <mat-card-actions>\n        <div class=\"ml\">{{product.price}}$</div>\n        <button mat-button>Teilen</button>\n        <button mat-button>Kaufen</button>\n      </mat-card-actions>\n    </mat-card>\n    </a>\n  </mat-grid-tile>\n</mat-grid-list>\n\n<mat-list>\n  <div mat-subheader>Produkte</div>\n  <mat-list-item *ngFor=\"let product of products; let i = index\">\n    <img class=\"product-img\" src=\"{{product.logo}}\" alt=\"{{product.name}}\">\n    <div mat-line>\n        {{product.name}}\n    </div>\n    <div mat-line>\n      {{product.category.name}}\n    </div>\n    <div mat-line>\n      {{product.price}}€\n    </div>\n  </mat-list-item>\n</mat-list>\n","import {Component, OnInit} from '@angular/core';\nimport {ShoppingCartService} from \"../../services/shopping_cart/shopping-cart.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {mapProduct, mapSize} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\nimport {Size} from \"../../models/Size\";\n\n@Component({\n  selector: 'app-shopping-carts',\n  templateUrl: './shopping-carts.component.html',\n  styleUrls: ['./shopping-carts.component.scss']\n})\nexport class ShoppingCartsComponent implements OnInit {\n\n  cart: Array<any> = [];\n  total: number = 0;\n\n  constructor(private shoppingCartService: ShoppingCartService,\n              private snackBar: MatSnackBar) {\n  }\n\n  ngOnInit(): void {\n    this.cart = this.shoppingCartService.getItems();\n    this.calcTotalPrice();\n  }\n\n  calcTotalPrice() {\n    this.total = 0;\n    for (let item of this.cart) {\n      this.total += item.amount * item.product._price;\n    }\n  }\n\n  orderNow() {\n\n  }\n\n  removeElement(index: number) {\n    this.shoppingCartService.removeItem(index);\n    this.snackBar.open(\"Erfolgreich gelöscht\")\n    this.cart = this.shoppingCartService.getItems();\n\n    this.calcTotalPrice();\n  }\n}\n","<mat-list>\n  <div mat-subheader>Shopping Cart</div>\n  <mat-list-item *ngFor=\"let item of cart; let i = index\">\n    <mat-icon mat-list-icon>shopping_cart</mat-icon>\n    <div mat-line>\n      <p style=\"float: left\">\n        {{item.product._name}}\n        <br>\n        Size: {{item.size._name}} | Amount: {{item.amount}} x {{item.product._price}}€\n      </p>\n      <p style=\"float: right\">\n        <button mat-icon-button aria-label=\"remove item\" (click)=\"removeElement(i)\" title=\"Remove Item\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </p>\n    </div>\n  </mat-list-item>\n</mat-list>\n\nTotal: {{total}}€\n\n<button mat-button aria-label=\"order\" (click)=\"orderNow()\" title=\"Order\">\n  Bestellen\n  <mat-icon>shopping_cart</mat-icon>\n</button>\n","import {Category} from \"./models/Category\";\nimport {Product} from \"./models/Product\";\nimport {Size} from \"./models/Size\";\nimport {Stock} from \"./models/Stock\";\nimport {Brand} from \"./models/Brand\";\nimport {throwError} from \"rxjs\";\n\nexport function mapProduct(product: any): Product {\n  const category = mapCategory(product.category);\n  const brand = mapBrand(product.brand);\n  return new Product(product._id, product.name, product.price, product.logo, category, brand);\n}\n\nexport function mapCategory(category: any): Category {\n  return new Category(category._id, category.name);\n}\n\nexport function mapBrand(brand: any): Brand {\n  return new Brand(brand._id, brand.name);\n}\n\nexport function mapSize(size: any): Size {\n  return new Size(size._id, size.name);\n}\n\nexport function mapStock(stock: any): Stock {\n  let product = mapProduct(stock.product);\n  let size = mapSize(stock.size);\n  return new Stock(stock._id, product, size, stock.amount);\n}\n\n\n/**\n * Handle Errors for HttpClient\n */\nexport function errorHandler(err: Response | any) {\n  let errorMessage = '';\n  if (err.error instanceof ErrorEvent) {\n    // Get client-side error\n    errorMessage = `Error Code: ${err.status}\\nMessage: ${err.message}`;\n  }\n  //console.log(errorMessage);\n  return throwError(errorMessage);\n}\n","export class Brand {\n  constructor(private _id: string,\n              private _name: string) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","export class Category {\nconstructor(private _id: string,\n            private _name: string) {\n}\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","import {Category} from \"./Category\";\nimport {Brand} from \"./Brand\";\n\nexport class Product {\n  constructor(private _id: string,\n              private _name: string,\n              private _price: number,\n              private _logo: string,\n              private _category: Category,\n              private _brand: Brand) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n\n  get price(): number {\n    return this._price;\n  }\n\n  set price(value: number) {\n    this._price = value;\n  }\n\n  get brand(): Brand {\n    return this._brand;\n  }\n\n  set brand(value: Brand) {\n    this._brand = value;\n  }\n\n  get logo(): string {\n    return this._logo;\n  }\n\n  set logo(value: string) {\n    this._logo = value;\n  }\n\n  get category(): Category {\n    return this._category;\n  }\n\n  set category(value: Category) {\n    this._category = value;\n  }\n}\n","export class Size {\n  constructor(private _id: string,\n              private _name: string) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  set name(value: string) {\n    this._name = value;\n  }\n}\n","import {Product} from \"./Product\";\nimport {Size} from \"./Size\";\n\nexport class Stock {\n  constructor(private _id: string,\n              private _product: Product,\n              private _size: Size,\n              private _amount: number) {\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n  }\n\n  get product(): Product {\n    return this._product;\n  }\n\n  set product(value: Product) {\n    this._product = value;\n  }\n\n  get size(): Size {\n    return this._size;\n  }\n\n  set size(value: Size) {\n    this._size = value;\n  }\n\n  get amount(): number {\n    return this._amount;\n  }\n\n  set amount(value: number) {\n    this._amount = value;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Brand} from \"../../models/Brand\";\nimport {environment} from \"../../../environments/environment\";\nimport {catchError, retry} from \"rxjs/operators\";\nimport {errorHandler} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrandsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getBrands(): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"brands\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getBrand(id: string): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"brands/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createBrand(body: any): Observable<Brand> {\n    return this.http.post<Brand>(environment.api_url + \"brands\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateBrand(id: string, body: any): Observable<Brand> {\n    return this.http.post<Brand>(environment.api_url + \"brands/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteBrand(id: string): Observable<Brand> {\n    return this.http.delete<Brand>(environment.api_url + \"brands/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProducts(brand_id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"brands/\" + brand_id + \"/products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Category} from \"../../models/Category\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, throwError} from 'rxjs';\nimport {catchError, retry} from 'rxjs/operators';\nimport {environment} from \"../../../environments/environment\";\nimport {errorHandler} from \"../../constants\";\nimport {Product} from \"../../models/Product\";\nimport {Brand} from \"../../models/Brand\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getCategories(): Observable<Category> {\n    return this.http.get<Category>(environment.api_url + \"categories\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getCategory(id: string): Observable<Category> {\n    return this.http.get<Category>(environment.api_url + \"categories/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createCategory(body: any): Observable<Category> {\n    return this.http.post<Category>(environment.api_url + \"categories\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateCategory(id: string, body: any):Observable<Category> {\n    return this.http.post<Category>(environment.api_url + \"categories/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteCategory(id: string): Observable<Category> {\n    return this.http.delete<Category>(environment.api_url + \"categories/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProducts(category_id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"categories/\" + category_id + \"/products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n /* getBrands(brand_id: string): Observable<Brand> {\n    return this.http.get<Brand>(environment.api_url + \"categories/\" + brand_id + \"/brands\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }*/\n}\n","import { Injectable } from '@angular/core';\nimport {Product} from \"../../models/Product\";\nimport {HttpClient} from \"@angular/common/http\";\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport {environment} from \"../../../environments/environment\";\nimport {errorHandler} from \"../../constants\";\nimport {Stock} from \"../../models/Stock\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private http: HttpClient) { }\n\n\n  getProducts(): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"products\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getProduct(id: string): Observable<Product> {\n    return this.http.get<Product>(environment.api_url + \"products/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  createProduct(body: any): Observable<Product> {\n    return this.http.post<Product>(environment.api_url + \"products\", body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  updateProduct(id: string, body: any):Observable<Product> {\n    return this.http.post<Product>(environment.api_url + \"products/\" + id, body)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  deleteProduct(id: string): Observable<Product> {\n    return this.http.delete<Product>(environment.api_url + \"products/\" + id)\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n\n  getStock(id: string): Observable<Stock> {\n    return this.http.get<Stock>(environment.api_url + \"products/\" + id + \"/stock\")\n      .pipe(\n        retry(1),\n        catchError(errorHandler)\n      );\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShoppingCartService {\n\n  constructor() {\n  }\n\n  /**\n   * Add selection to the user's shopping cart\n   * @param product to be added to the local storage\n   * @param size of the product\n   * @param amount of items\n   */\n  addItem(product: any, size: any, amount: number) {\n    let cart = this.getItems();\n    // check if cart has not initialized before\n    if (cart == null) {\n      cart = [];\n    }\n    // push selection to array\n    cart.push({\n      product: product,\n      size: size,\n      amount: amount\n    });\n    // save it\n    this.writeItems(cart);\n  }\n\n  /**\n   * Save shopping cart in local storage\n   * @param cart\n   */\n  writeItems(cart: any) {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }\n\n  getItems(): Array<any> {\n    let cart_string = localStorage.getItem('cart');\n    let cart_json = JSON.parse(cart_string);\n\n    return cart_json;\n  }\n\n  /**\n   * Remove product with size from shopping cart\n   * @param index\n   */\n  removeItem(index: number) {\n    let cart = this.getItems();\n    // remove index\n    delete cart[index];\n    // remove null value\n    let filtered = cart.filter(function (el) {\n      return el != null;\n    });\n\n    this.writeItems(filtered);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_url: \"http://localhost:3000/api/\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}